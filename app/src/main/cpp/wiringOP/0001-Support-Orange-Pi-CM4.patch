From 96e6be4d47dc85c31892af486ca7708da349f5a4 Mon Sep 17 00:00:00 2001
From: baiywt <baiywt_gj@163.com>
Date: Tue, 14 Feb 2023 20:17:17 +0800
Subject: [PATCH 1/3] Support Orange Pi CM4

---
 gpio/readall.c      |  64 ++++++++++
 wiringPi/wiringPi.c | 334 +++++++++++++++++++++++++++++++++++++++++++++++++++-
 wiringPi/wiringPi.h |  50 ++++++++
 3 files changed, 445 insertions(+), 3 deletions(-)

diff --git a/gpio/readall.c b/gpio/readall.c
index 556d6e1..b23d7f4 100644
--- a/gpio/readall.c
+++ b/gpio/readall.c
@@ -928,6 +928,60 @@ static char * physNames_5B[64] =
 	"     GND", "PWM1    ",
 };
 
+static int physToWpi_CM4[64] =
+{
+	-1,     //0
+	-1, -1, //1,2
+	 0, -1, //3,4
+	 1, -1, //5,6
+	 2,  3, //7,8
+	-1,  4, //9,10
+	 5,  6, //11,12
+	 7, -1, //13,14
+	 8,  9, //15,16
+	-1, 10, //17,18
+	11, -1, //19,20
+	12, 13, //21,22
+	14, 15, //23,24
+	-1, 16, //25,26
+	17, 18, //27,28
+	19, -1, //29,30
+	20, 21, //31,32
+	22, -1, //33,34
+	23, 24, //35,36
+	25, 26, //37,38
+	-1, 27, //39,40
+
+	// Padding:
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // ... 56
+	-1, -1, -1, -1, -1, -1, -1,    					// ... 63
+};
+
+static char * physNames_CM4[64] =
+{
+	NULL,
+	"    3.3V", "5V      ",
+	"   SDA.2", "5V      ",
+	"   SCL.2", "GND     ",
+	"GPIO4_A4", "RXD.2   ",
+	"     GND", "TXD.2   ",
+	"GPIO3_C6", "GPIO3_C7",
+	"GPIO4_A0", "GND     ",
+	"GPIO4_A2", "GPIO4_A3",
+	"    3.3V", "GPIO4_A1",
+	"SPI3_TXD", "GND     ",
+	"SPI3_RXD", "GPIO4_B1",
+	"SPI3_CLK", "SPI3_CS1",
+	"     GND", "GPIO4_A7",
+	"   SDA.3", "SCL.3   ",
+	"GPIO4_A5", "GND     ",
+	"GPIO3_D4", "GPIO3_D6",
+	"GPIO3_D7", "GND     ",
+	"GPIO3_D0", "GPIO3_D5",
+	"GPIO3_D3", "GPIO3_D2",
+	"     GND", "GPIO3_D1",
+};
+
 static int * physToWpi;
 static char ** physNames;
 
@@ -1225,6 +1279,12 @@ void OrangePiReadAll(int model)
 			physNames =  physNames_5B;
 			alts = alts_rk3588;
 			break;
+		case PI_MODEL_CM4:
+			printf (" +------+-----+----------+--------+---+  PI CM4  +---+--------+----------+-----+------+\n");
+			physToWpi =  physToWpi_CM4;
+			physNames =  physNames_CM4;
+			alts = alts_rk3588;
+			break;
 		default:
 			printf ("Oops - unable to determine board type... model: %d\n", model);
 			break ;
@@ -1241,6 +1301,7 @@ void OrangePiReadAll(int model)
 		case PI_MODEL_PC_2:
 		case PI_MODEL_PRIME:
 		case PI_MODEL_WIN:
+		case PI_MODEL_CM4:
 			for (pin = 1 ; pin <= 40; pin += 2)
 				readallPhys(pin);
 			break;
@@ -1325,6 +1386,9 @@ void OrangePiReadAll(int model)
 		case PI_MODEL_5B:
 			printf (" +------+-----+----------+--------+---+   PI5B   +---+--------+----------+-----+------+\n");
 			break;
+		case PI_MODEL_CM4:
+			printf (" +------+-----+----------+--------+---+  PI CM4  +---+--------+----------+-----+------+\n");
+			break;
 		default:
 			printf ("Oops - unable to determine board type... model: %d\n", model);
 			break ;
diff --git a/wiringPi/wiringPi.c b/wiringPi/wiringPi.c
index fa73ad4..948c1f5 100755
--- a/wiringPi/wiringPi.c
+++ b/wiringPi/wiringPi.c
@@ -273,6 +273,16 @@ static int ORANGEPI_PIN_MASK_5B[5][32] =  //[BANK]	[INDEX]
 	{-1,-1,-1, 3, 4,-1,-1,-1, -1,-1, 2, 3, 4,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,},//GPIO4
 };
 
+static int ORANGEPI_PIN_MASK_CM4[5][32] =  //[BANK]	[INDEX]
+{
+	{-1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,  0, 1,-1,-1,-1,-1,-1,-1,},//GPIO0
+	{ 0, 1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,},//GPIO1
+	{-1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,},//GPIO2
+	{-1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1, 6, 7,  0, 1, 2, 3, 4, 5, 6, 7,},//GPIO3
+	{ 0, 1, 2, 3, 4, 5, 6, 7,  0, 1, 2, 3, 4, 5,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1, -1,-1,-1,-1,-1,-1,-1,-1,},//GPIO4
+};
+
+
 static int ORANGEPI_PIN_MASK_R1_PLUS[5][32] =  //[BANK]	[INDEX]
 {
 	{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},//PA
@@ -460,6 +470,7 @@ sunxi_gpio_info sunxi_gpio_info_t;
 rk3328_soc_info rk3328_soc_info_t;
 rk3399_soc_info rk3399_soc_info_t;
 rk3588_soc_info rk3588_soc_info_t;
+rk3566_soc_info rk3566_soc_info_t;
 
 // sysFds:
 //	Map a file descriptor from the /sys/class/gpio/gpioX/value
@@ -818,6 +829,29 @@ int pinToGpio_5B[64] =
 	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,// ... 63
 };
 
+int pinToGpio_CM4[64] =
+{
+	140,  141,      // 0, 1
+	132, 25,      // 2, 3
+	24, 118,      // 4  5
+	119, 128,      // 6, 7
+	130,  131,      // 8, 9
+	129,  138,      //10,11
+	136,  137,      //12,13
+	139,  134,      //14,15
+	135,  32,      //16,17
+	33,  133,      //18,19
+	124,  126,      //20,21
+	127,  120,      //22,23
+	125,  123,      //24,25
+	122,  121,      //26,27
+	-1,  -1,      //28,29
+	-1,  -1,      //30,31
+
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // ... 47
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,// ... 63
+};
+
 int pinToGpio_R1_PLUS[64] =
 {
 	89,  88,      // 0, 1
@@ -1296,6 +1330,35 @@ int physToGpio_5B[64] =
 	-1, -1, -1, -1, -1, -1, -1,   // ... 63
 };
 
+int physToGpio_CM4[64] =
+{
+	-1,       // 0
+	-1, -1,   // 1, 2
+	140, -1,   // 3, 4
+	141, -1,   // 5, 6
+	132, 25,   // 7, 8
+	-1, 24,   // 9, 10
+	118, 119,   // 11, 12
+	128, -1,   // 13, 14
+	130, 131,   // 15, 16
+	-1, 129,   // 17, 18
+	138, -1,   // 19, 20
+	136, 137,   // 21, 22
+	139, 134,   // 23, 24
+	-1, 135,   // 25, 26
+	32, 33,   // 27, 28
+	133, -1,   // 29, 30
+	124, 126,   // 31, 32
+	127, -1,   // 33, 34
+	120, 125,   // 35, 36
+	123, 122,   // 37, 38
+	-1, 121,   // 39, 40
+
+	//Padding:
+	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // ... 56
+	-1, -1, -1, -1, -1, -1, -1,   // ... 63
+};
+
 int physToGpio_R1_PLUS[64] =//head num map to OrangePi
 {
 	-1,       // 0
@@ -1690,6 +1753,7 @@ void piBoardId (int * model)
 	else if (strncmp(revision, "orangepi-r1plus-lts.",     20) == 0) { *model = PI_MODEL_R1_PLUS; }
 	else if (strncmp(revision, "orangepi5.",     		   10) == 0) { *model = PI_MODEL_5; }
 	else if (strncmp(revision, "orangepi5b.",     		   11) == 0) { *model = PI_MODEL_5B; }
+	else if (strncmp(revision, "orangepicm4.",     		   12) == 0) { *model = PI_MODEL_CM4; }
 
 	if (wiringPiDebug)
 		printf("piBoardId: model = %d\n", *model);
@@ -2915,6 +2979,11 @@ int wiringPiSetup (void)
 			physToGpio = physToGpio_5B;
 			ORANGEPI_PIN_MASK = ORANGEPI_PIN_MASK_5B;
 			break;
+		case PI_MODEL_CM4:
+			pinToGpio =  pinToGpio_CM4;
+			physToGpio = physToGpio_CM4;
+			ORANGEPI_PIN_MASK = ORANGEPI_PIN_MASK_CM4;
+			break;
 		default:
 			printf ("Oops - unable to determine board type... model: %d\n", OrangePiModel);
 			break ;
@@ -3062,6 +3131,47 @@ int wiringPiSetup (void)
 			rk3588_soc_info_t.vccio6_ioc_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3588_VCCIO6_IOC_BASE);
 			if ((int32_t)(unsigned long)rk3588_soc_info_t.pmu1cur_base == -1)
 				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3588_VCCIO6_IOC_BASE) failed: %s\n", strerror(errno));
+
+			break;
+
+		case PI_MODEL_CM4:
+
+			/* GPIO Register */
+			rk3566_soc_info_t.gpio0_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_GPIO0_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.gpio0_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3588_GPIO0_BASE) failed: %s\n", strerror(errno));
+
+			rk3566_soc_info_t.gpio1_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_GPIO1_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.gpio1_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3588_GPIO1_BASE) failed: %s\n", strerror(errno));
+
+			rk3566_soc_info_t.gpio2_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_GPIO2_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.gpio2_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3588_GPIO2_BASE) failed: %s\n", strerror(errno));
+
+			rk3566_soc_info_t.gpio3_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_GPIO3_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.gpio3_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3588_GPIO3_BASE) failed: %s\n", strerror(errno));
+
+			rk3566_soc_info_t.gpio4_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_GPIO4_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.gpio4_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3588_GPIO4_BASE) failed: %s\n", strerror(errno));
+
+			rk3566_soc_info_t.pmu_grf_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_PMU_GRF_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.pmu_grf_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3566_PMU_GRF_BASE) failed: %s\n", strerror(errno));
+
+			rk3566_soc_info_t.sys_grf_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_SYS_GRF_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.sys_grf_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3566_SYS_GRF_BASE) failed: %s\n", strerror(errno));
+
+			rk3566_soc_info_t.cru_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_CRU_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.cru_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3566_CRU_BASE) failed: %s\n", strerror(errno));
+
+			rk3566_soc_info_t.pmu_cru_base = (uint32_t *)mmap(0, BLOCK_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, fd, RK3566_PMU_CRU_BASE);
+			if ((int32_t)(unsigned long)rk3566_soc_info_t.pmu_cru_base == -1)
+				return wiringPiFailure(WPI_ALMOST, "wiringPiSetup: mmap (RK3566_PMU_CRU_BASE) failed: %s\n", strerror(errno));
 			break;
 
 		default:
@@ -3323,6 +3433,35 @@ unsigned int readR(unsigned int addr)
 
 			break;
 
+		case PI_MODEL_CM4:
+
+			val = 0;
+
+			mmap_base = (addr & (0xfffff000));
+			mmap_seek = (addr - mmap_base);
+
+			if(mmap_base == RK3566_GPIO0_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio0_base + mmap_seek));
+			else if(mmap_base == RK3566_GPIO1_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio1_base + mmap_seek));
+			else if(mmap_base == RK3566_GPIO2_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio2_base + mmap_seek));
+			else if(mmap_base == RK3566_GPIO3_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio3_base + mmap_seek));
+			else if(mmap_base == RK3566_GPIO4_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio4_base + mmap_seek));
+			else if(mmap_base == RK3566_PMU_GRF_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.pmu_grf_base + mmap_seek));
+			else if(mmap_base == RK3566_SYS_GRF_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.sys_grf_base + mmap_seek));
+			else if(mmap_base == RK3566_CRU_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.cru_base + mmap_seek));
+			else if(mmap_base == RK3566_PMU_CRU_BASE)
+				val = *((unsigned int *)((unsigned char *)rk3566_soc_info_t.pmu_cru_base + mmap_seek));
+			return val;
+
+			break;
+
 		default:
 			
 			val = 0;
@@ -3424,6 +3563,31 @@ void writeR(unsigned int val, unsigned int addr)
 
 			break;
 
+		case PI_MODEL_CM4:
+
+			mmap_base = (addr & (~0xfff));
+			mmap_seek = (addr - mmap_base);
+
+			if(mmap_base == RK3566_GPIO0_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio0_base + mmap_seek)) = val;
+			else if(mmap_base == RK3566_GPIO1_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio1_base + mmap_seek)) = val;
+			else if(mmap_base == RK3566_GPIO2_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio2_base + mmap_seek)) = val;
+			else if(mmap_base == RK3566_GPIO3_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio3_base + mmap_seek)) = val;
+			else if(mmap_base == RK3566_GPIO4_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.gpio4_base + mmap_seek)) = val;
+			else if(mmap_base == RK3566_PMU_GRF_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.pmu_grf_base + mmap_seek)) = val;
+			else if(mmap_base == RK3566_SYS_GRF_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.sys_grf_base + mmap_seek)) = val;
+			else if(mmap_base == RK3566_CRU_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.cru_base + mmap_seek)) = val;
+			else if(mmap_base == RK3566_PMU_CRU_BASE)
+				*((unsigned int *)((unsigned char *)rk3566_soc_info_t.pmu_cru_base + mmap_seek)) = val;
+			break;
+
 		default:
 
 			mmap_base = (addr & 0xfffff000);
@@ -3580,6 +3744,31 @@ int OrangePi_get_gpio_mode(int pin)
 
 			break;
 
+		case PI_MODEL_CM4:
+
+			if(bank == 0){
+				grf_phyaddr = RK3566_PMU_GRF_BASE + RK3566_PMU_GRF_GPIO0A_IOMUX_L_OFFSET + ((pin >> 2) << 2);
+				ddr_phyaddr = RK3566_GPIO0_BASE + RK3566_GPIO_SWPORT_DDR_L_OFFSET + ((index >> 4) << 2);
+			}
+			else{
+				grf_phyaddr = RK3566_SYS_GRF_BASE + RK3566_GRF_GPIO1A_IOMUX_L_OFFSET + (((pin - 32) >> 2) << 2);
+				ddr_phyaddr = RK3566_GPIO1_BASE + ((bank - 1) << 16) + RK3566_GPIO_SWPORT_DDR_L_OFFSET + ((index >> 4) << 2);
+			}
+
+			offset = (index % 4) << 2;
+
+			if (ORANGEPI_PIN_MASK[bank][index] != -1) {
+				regval = readR(grf_phyaddr);
+				mode = (regval >> offset) & 0x7;
+
+				if(mode == 0){ //如果是gpio模式
+					regval = readR(ddr_phyaddr);//获取gpio方向寄存器的值
+					return (regval >> (index % 16)) & 0x1;//index对应的gpio的方向值，0为in，1为out
+				}
+				return mode + 1;//如果不是gpio模式，返回的alt，从2开始，0和1是in和out
+			}
+			break;
+
 		default:
 
 			offset = ((index - ((index >> 3) << 3)) << 2);
@@ -3619,6 +3808,8 @@ int OrangePi_set_gpio_mode(int pin, int mode)
 	unsigned int rk3588_pmu1_ioc_phyaddr;
 	unsigned int rk3588_bus_ioc_phyaddr;
 	unsigned int temp = 0;
+	unsigned int bit_enable;
+	unsigned int grf_val = 0;
 
 	switch (OrangePiModel)
 	{
@@ -3892,6 +4083,64 @@ int OrangePi_set_gpio_mode(int pin, int mode)
 
 			break;
 
+		case PI_MODEL_CM4:
+			if(bank == 0){
+				cru_phyaddr = RK3566_PMU_CRU_BASE + RK3566_PMUCRU_PMUGATE_CON01_OFFSET;
+				cru_val = ~((0x3 << 9) | (0x3 << (16 + 9)));
+				grf_phyaddr = RK3566_PMU_GRF_BASE + RK3566_PMU_GRF_GPIO0A_IOMUX_L_OFFSET + ((pin >> 2) << 2);
+				ddr_phyaddr = RK3566_GPIO0_BASE + RK3566_GPIO_SWPORT_DDR_L_OFFSET + ((index >> 4) << 2);
+			}
+			else{
+				cru_phyaddr = RK3566_CRU_BASE + RK3566_CRU_GATE_CON31_OFFSET;
+				cru_val = ~((0xff << 2) | (0xff << (16 + 2)));
+				grf_phyaddr = RK3566_SYS_GRF_BASE + RK3566_GRF_GPIO1A_IOMUX_L_OFFSET + (((pin - 32) >> 2) << 2);
+				ddr_phyaddr = RK3566_GPIO1_BASE + ((bank - 1) << 16) + RK3566_GPIO_SWPORT_DDR_L_OFFSET + ((index >> 4) << 2);
+			}
+
+			offset = (index % 4) << 2;
+			bit_enable = 0x7 << (16 + offset);
+			/* Ignore unused gpio */
+			if (ORANGEPI_PIN_MASK[bank][index] != -1)
+			{
+				regval = readR(cru_phyaddr);
+				regval &= cru_val;
+				writeR(regval, cru_phyaddr);
+				regval = readR(grf_phyaddr);
+				if(wiringPiDebug)
+					printf("read val(%#x) from register[%#x]\n", regval, grf_phyaddr);
+				regval |= bit_enable;
+				regval &= ~(0x7 << offset);
+				if (wiringPiDebug)
+					printf("write val(%#x) to register[%#x]\n", regval, grf_phyaddr);
+				writeR(regval, grf_phyaddr);
+				regval = readR(grf_phyaddr);
+				if(wiringPiDebug)
+					printf("set over reg val: 0x%x\n", regval);
+
+				regval = readR(ddr_phyaddr);
+				if(wiringPiDebug)
+					printf("read val ddr (%#x) from register[%#x]\n", regval, ddr_phyaddr);
+
+				regval |= 0x1 << (16 + (index % 16));
+				if(INPUT == mode)
+					regval &= ~(1 << (index % 16));
+				else
+					regval |= (1 << (index % 16));
+
+				writeR(regval, ddr_phyaddr);
+				if (wiringPiDebug)
+					printf("write val(%#x) to register[%#x]\n", regval, ddr_phyaddr);
+
+				regval = readR(ddr_phyaddr);
+				if (wiringPiDebug)
+					printf("set over reg val: 0x%x\n", regval);
+			}
+			else
+			{
+				printf("Pin mode failed!\n");
+			}
+			break;
+
 		default:
 
 			offset = ((index - ((index >> 3) << 3)) << 2);
@@ -3985,13 +4234,15 @@ int OrangePi_set_gpio_alt(int pin, int mode)
  */
 int OrangePi_digitalWrite(int pin, int value)
 {
-    unsigned int bank   = pin >> 5;
-    unsigned int index  = pin - (bank << 5);
-    unsigned int phyaddr = 0;
+	unsigned int bank   = pin >> 5;
+	unsigned int index  = pin - (bank << 5);
+	unsigned int phyaddr = 0;
 	unsigned int regval = 0;
 	unsigned int cru_phyaddr =0, gpio_phyaddr = 0, dr_phyaddr = 0;
 	unsigned int cru_val = 0;
 	unsigned int temp = 0;
+	unsigned int bit_enable = 0;
+	unsigned int offset;
 
 	switch (OrangePiModel)
 	{
@@ -4155,6 +4406,56 @@ int OrangePi_digitalWrite(int pin, int value)
 
 			break;
 
+		case PI_MODEL_CM4:
+
+			if(bank == 0){
+				dr_phyaddr = RK3566_GPIO0_BASE + RK3566_GPIO_SWPORT_DR_L_OFFSET + ((index >> 4) << 2);
+				cru_phyaddr = RK3566_PMU_CRU_BASE + RK3566_PMUCRU_PMUGATE_CON01_OFFSET;
+				cru_val = ~((0x3 << 9) | (0x3 << (16 + 9)));
+			}
+			else{
+				dr_phyaddr = RK3566_GPIO1_BASE + ((bank - 1) << 16) + RK3566_GPIO_SWPORT_DR_L_OFFSET + ((index >> 4) << 2);
+				cru_phyaddr = RK3566_CRU_BASE + RK3566_CRU_GATE_CON31_OFFSET;
+				cru_val = ~((0xff << 2) | (0xff << (16 + 2)));
+			}
+
+			offset = index % 16;
+			bit_enable = 0x1 << (16 + offset);
+
+			/* Ignore unused gpio */
+			if (ORANGEPI_PIN_MASK[bank][index] != -1)
+			{
+				regval = readR(cru_phyaddr);
+				regval &= cru_val;
+				writeR(regval, cru_phyaddr);
+
+				regval = readR(dr_phyaddr);
+
+				if(wiringPiDebug)
+					printf("read val(%#x) from register[%#x]\n", regval, dr_phyaddr);;
+
+				regval |= bit_enable;
+
+				if(0 == value)
+					regval &= ~(1 << offset);
+				else
+					regval |= (1 << offset);
+
+				writeR(regval, dr_phyaddr);
+				if (wiringPiDebug)
+					printf("write val(%#x) to register[%#x]\n", regval, dr_phyaddr);
+
+				regval = readR(dr_phyaddr);
+				if (wiringPiDebug)
+					printf("set over reg val: 0x%x\n", regval);
+			} 
+			else
+			{
+				printf("Pin mode failed!\n");
+			}
+
+			break;
+
 		default:
 			
 			if (bank == 11)
@@ -4249,6 +4550,15 @@ int OrangePi_digitalRead(int pin)
 
 			break;
 
+		case PI_MODEL_CM4:
+
+			if(bank == 0)
+				phyaddr = RK3566_GPIO0_BASE + RK3566_GPIO_EXT_PORT_OFFSET;
+			else
+				phyaddr = RK3566_GPIO1_BASE + ((bank - 1) << 16) + RK3566_GPIO_EXT_PORT_OFFSET;
+
+			break;
+
 		default:
 
 			if (bank == 11) 
@@ -4349,6 +4659,24 @@ void OrangePi_set_gpio_pullUpDnControl (int pin, int pud)
 
 			break;
 
+		case PI_MODEL_CM4:
+
+			if (bank == 0)
+				phyaddr = RK3566_PMU_GRF_BASE + RK3566_PMU_GRF_GPIO0A_P_OFFSET  + (((pin - 0) >> 3) << 2);
+			else
+				phyaddr = RK3566_SYS_GRF_BASE + RK3566_GRF_GPIO1A_P_OFFSET + (((pin - 32)  >> 3) << 2);
+
+			offset = (index % 8) << 1;
+			bit_enable = 3 << ( 16 + offset);
+
+			/* */if (PUD_UP == pud)
+					bit_value = 1;
+			else if (PUD_DOWN == pud)
+					bit_value = 2;
+			else if (PUD_OFF == pud)
+					bit_value = 0;
+			break;
+
 		default:
 			//int offset = ((index - ((index >> 4) << 4)) << 1);
 			offset = ((index % 16) << 1);
diff --git a/wiringPi/wiringPi.h b/wiringPi/wiringPi.h
index 40f1425..4a9daa7 100644
--- a/wiringPi/wiringPi.h
+++ b/wiringPi/wiringPi.h
@@ -157,6 +157,53 @@ typedef struct {
 
 /*********** Rockchip RK3588 *************/
 
+/*********** Rockchip RK3566 *************/
+
+//gpio0~gpio4 register base addr
+#define RK3566_GPIO0_BASE 							0xfdd60000U
+#define RK3566_GPIO1_BASE 							0xfe740000U
+#define RK3566_GPIO2_BASE 							0xfe750000U
+#define RK3566_GPIO3_BASE 							0xfe760000U
+#define RK3566_GPIO4_BASE 							0xfe770000U
+
+//gpio offset
+#define RK3566_GPIO_SWPORT_DR_L_OFFSET 				0x00U
+#define RK3566_GPIO_SWPORT_DR_H_OFFSET 				0x04U
+#define RK3566_GPIO_SWPORT_DDR_L_OFFSET 			0x08U
+#define RK3566_GPIO_SWPORT_DDR_H_OFFSET 			0x0cU
+#define RK3566_GPIO_EXT_PORT_OFFSET					0x70U
+
+#define RK3566_PMU_GRF_BASE							0xfdc20000U
+#define RK3566_SYS_GRF_BASE							0xfdc60000U
+#define RK3566_PMU_CRU_BASE							0xfdd00000U
+#define RK3566_CRU_BASE								0xFdd20000U
+
+// clock
+#define RK3566_CRU_GATE_CON31_OFFSET				0x37CU
+#define RK3566_PMUCRU_PMUGATE_CON01_OFFSET			0x184U  //bit 9 bit10  0 enable
+
+// iomux + pull up/down
+#define RK3566_GRF_GPIO1A_IOMUX_L_OFFSET			0x00U
+#define RK3566_GRF_GPIO1A_P_OFFSET					0x80U
+#define RK3566_PMU_GRF_GPIO0A_IOMUX_L_OFFSET		0x00U
+#define RK3566_PMU_GRF_GPIO0A_P_OFFSET				0x20U
+
+typedef struct {
+	unsigned int * gpio0_base;
+	unsigned int * gpio1_base;
+	unsigned int * gpio2_base;
+	unsigned int * gpio3_base;
+	unsigned int * gpio4_base;
+
+	unsigned int * pmu_grf_base;
+	unsigned int * sys_grf_base;
+
+	unsigned int * cru_base;
+	unsigned int * pmu_cru_base;
+} rk3566_soc_info;
+
+/*********** Rockchip RK3566 *************/
+
 
 /*********** Rockchip RK3399 *************/
 
@@ -304,6 +351,9 @@ extern int wiringPiDebug;
 #define	PI_MODEL_5				24
 #define	PI_MODEL_5B				25
 
+/* Rockchip RK3566 */
+#define	PI_MODEL_CM4			26
+
 extern const char *piModelNames    [16] ;
 
 extern const char *piRevisionNames [16] ;
-- 
1.9.1

